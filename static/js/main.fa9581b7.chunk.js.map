{"version":3,"sources":["components/todo-item.js","components/input-todo.js","components/todo-list.js","App.js","index.js"],"names":["TodoItem","props","task","deleteTask","editTask","updateStatus","useState","value","editMode","setEditMode","className","id","index","type","checked","status","onChange","e","toString","onDoubleClick","target","description","onKeyDown","keyCode","endEdit","onClick","InputTodo","addTask","onSubmit","placeholder","TodoList","tasks","setTasks","taskId","Number","parentElement","split","prevTasks","filter","taskDescription","newTasks","find","x","useEffect","fetchApi","a","fetch","response","json","initialTasks","slice","map","old","title","completed","JSON","parse","localStorage","getItem","setItem","stringify","preventDefault","inputElement","querySelector","newTask","indexes","maxIndex","length","Math","max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa9581b7.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst TodoItem = (props) => {\n  const {\n    task, deleteTask, editTask, updateStatus,\n  } = props;\n\n  const [editMode, setEditMode] = useState({ value: false });\n\n  const startEdit = () => {\n    setEditMode({ value: true });\n  };\n\n  const endEdit = (e) => {\n    if (e.keyCode === 13) {\n      setEditMode({ value: false });\n    }\n  };\n\n  return (\n    <li className=\"todo-item\" id={`item-${task.index}`}>\n      <input\n        className=\"item-status\"\n        key={task.status}\n        type=\"checkbox\"\n        checked={task.status}\n        onChange={(e) => updateStatus(e, task.index)}\n      />\n      <span\n        className={`item-description edit-${editMode.value.toString()} ${task.status ? 'task-done' : ''}`}\n        onDoubleClick={(e) => startEdit(e.target.value, task.index)}\n      >\n        {task.description}\n      </span>\n      <input\n        className={`edit-${editMode.value.toString()}`}\n        onChange={(e) => editTask(e.target.value, task.index)}\n        onKeyDown={(e) => endEdit(e)}\n        value={task.description}\n      />\n      <button className=\"item-delete\" type=\"button\" onClick={deleteTask}> Delete </button>\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  task: PropTypes.shape({\n    description: PropTypes.string.isRequired,\n    status: PropTypes.bool.isRequired,\n    index: PropTypes.number.isRequired,\n  }).isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  editTask: PropTypes.func.isRequired,\n  updateStatus: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import PropTypes from 'prop-types';\n\nconst InputTodo = (props) => {\n  const { addTask } = props;\n  return (\n    <form id=\"input-todo\" onSubmit={addTask}>\n      <input type=\"text\" placeholder=\"New Task\" />\n      <button type=\"submit\"> Add Task </button>\n    </form>\n  );\n};\n\nInputTodo.propTypes = {\n  addTask: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","import { useState, useEffect } from 'react';\nimport TodoItem from './todo-item';\nimport InputTodo from './input-todo';\nimport './todo-list.css';\n\nconst TodoList = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const deleteTask = (e) => {\n    const taskId = Number(e.target.parentElement.id.split('-')[1]);\n    setTasks((prevTasks) => prevTasks.filter((task) => (task.index !== taskId)));\n  };\n\n  const addTask = (e) => {\n    e.preventDefault();\n    const inputElement = e.target.querySelector('input');\n    const taskDescription = inputElement.value;\n    inputElement.value = '';\n\n    const newTask = { description: taskDescription, status: false };\n    setTasks((prevTasks) => {\n      const indexes = prevTasks.map((x) => x.index);\n      const maxIndex = prevTasks.length === 0 ? 0 : Math.max(...indexes);\n      return [...prevTasks, { ...newTask, index: maxIndex + 1 }];\n    });\n  };\n\n  const editTask = (taskDescription, taskId) => {\n    setTasks((prevTasks) => {\n      const newTasks = [...prevTasks];\n      const task = newTasks.find((x) => x.index === taskId);\n      task.description = taskDescription;\n      return newTasks;\n    });\n  };\n\n  const updateStatus = (e, taskId) => {\n    const newTasks = [...tasks];\n    const task = newTasks.find((x) => x.index === taskId);\n    task.status = !task.status;\n    setTasks(newTasks);\n  };\n\n  // Load from local storage\n  useEffect(() => {\n    const url = 'https://jsonplaceholder.typicode.com/todos';\n    const fetchApi = async () => {\n      const response = await fetch(url);\n      const json = await response.json();\n      const initialTasks = json.slice(0, 10).map((old) => (\n        { description: old.title, index: old.id, status: old.completed }\n      ));\n      setTasks(initialTasks);\n    };\n    const tasks = JSON.parse(localStorage.getItem('tasks'));\n    if (tasks) {\n      setTasks(tasks);\n    } else {\n      fetchApi();\n    }\n  }, []);\n\n  // Save to local storage\n  useEffect(() => localStorage.setItem('tasks', JSON.stringify(tasks)), [tasks]);\n\n  return (\n    <ul id=\"todo-list\">\n      <InputTodo addTask={addTask} />\n      {tasks.map((task) => (\n        <TodoItem\n          key={task.index}\n          task={task}\n          editTask={editTask}\n          updateStatus={updateStatus}\n          deleteTask={deleteTask}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import './App.css';\nimport TodoList from './components/todo-list';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1> To Do List </h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}